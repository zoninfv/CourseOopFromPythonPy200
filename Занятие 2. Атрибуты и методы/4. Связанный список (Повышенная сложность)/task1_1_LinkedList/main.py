"""
Пример односвязного списка без использования классических структур Python таких как list
Просто запустить и ознакомиться с кодом
"""


class Node:
    """
    Класс узла, здесь хранятся все данные узла и ссылка на следующий узел
    """
    def __init__(self, data):
        self.data = data  # Данные
        self.next = None  # Указатель на следующий узел


class LinkedList:
    """
    Класс односвязного списка
    """
    def __init__(self):
        self.head = None  # Начало списка. None значит, что ничего пока не добавлено в связанный список.
        # как только будет что-то добавлено, то здесь будет ссылка на первый элемент связанного списка,
        # с него всегда будет происходить поиск элементов, поэтому он обозначается head.

    def append(self, data) -> None:
        """
        Добавление значения в конец связанного списка
        :param data: То значение что хотим добавить
        :return:
        """
        new_node = Node(data)  # Создаём новый узел
        if not self.head:  # Если список пустой, т.е. добавляем первый элемент в связанный список
            self.head = new_node  # Теперь как головной узел (начальный), будет наш узел
        else:  # Раз в головном узле, что-то есть, то нужно дойти до крайнего узла, у которого нет ссылки на следующий и в него уже записать новый узел
            current = self.head
            while current.next:  # Ищем последний узел (пока есть активная ссылка на следующий узел, не None)
                current = current.next
            # Цикл заканчивается когда находим последний элемент, т.е. ссылка на следующий элемент (next) является None
            current.next = new_node  # Добавляем новый узел в конец

    def print_list(self):
        """
        Графическое отображение структуры
        :return:
        """
        current = self.head  # Все начинается с головы
        while current:  # Пока есть не пустой узел
            print(current.data, end=" -> ")
            current = current.next
        print("None")


if __name__ == "__main__":
    # Пример использования односвязного списка
    ll = LinkedList()
    ll.append(1)
    ll.append(2)
    ll.append(3)
    ll.print_list()  # 1 -> 2 -> 3 -> None
