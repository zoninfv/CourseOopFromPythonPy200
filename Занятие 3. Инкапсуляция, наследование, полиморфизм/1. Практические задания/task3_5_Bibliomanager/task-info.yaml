type: output
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 774
        length: 31
        placeholder_text: "...  # TODO реализуйте проверку"
        initial_state:
          length: 31
          offset: 774
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(title, str):
                      return TypeError()
        selected: false
        status: Unchecked
      - offset: 972
        length: 31
        placeholder_text: "...  # TODO реализуйте проверку"
        initial_state:
          length: 31
          offset: 972
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(author, (str, type(None))):
                      return TypeError()
        selected: false
        status: Unchecked
      - offset: 1242
        length: 31
        placeholder_text: "...  # TODO реализуйте проверку"
        initial_state:
          length: 31
          offset: 1242
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(year, (int, type(None))):
                      return TypeError()
                  if not year > 0:
                      return ValueError()
        selected: false
        status: Unchecked
      - offset: 1760
        length: 115
        placeholder_text: "# TODO добавьте свойство is_checked_out (на чтение). Возвра\
      щает \"Выдано\" если is_checked_out=True, иначе \"Доступно\""
        initial_state:
          length: 115
          offset: 1760
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def is_checked_out(self):
                  return "Выдано" if self.__is_checked_out else "Доступно"
        selected: false
        status: Unchecked
      - offset: 1881
        length: 42
        placeholder_text: "# TODO добавьте свойство title (на чтение)"
        initial_state:
          length: 42
          offset: 1881
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def title(self):
                  return self.__title
        selected: false
        status: Unchecked
      - offset: 1929
        length: 43
        placeholder_text: "# TODO добавьте свойство author (на чтение)"
        initial_state:
          length: 43
          offset: 1929
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def author(self):
                  return self.__author
        selected: false
        status: Unchecked
      - offset: 1978
        length: 53
        placeholder_text: "# TODO добавьте свойство publication_year (на чтение)"
        initial_state:
          length: 53
          offset: 1978
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def publication_year(self):
                  return self.__publication_year
        selected: false
        status: Unchecked
      - offset: 2421
        length: 137
        placeholder_text: "# TODO Инициализируйте переменные от LibraryItem и добавьте\
      \ новый приватный атрибут genre. Не забудьте, что нужна валидация перед запи\
      сью"
        initial_state:
          length: 137
          offset: 2421
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          super().__init__(title, author, publication_year)
                  self.__validate_genre(genre)
                  self.__genre = genre
        selected: false
        status: Unchecked
      - offset: 2714
        length: 36
        placeholder_text: "...  # TODO написать метод валидации"
        initial_state:
          length: 36
          offset: 2714
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(genre, str):
                      raise TypeError()
        selected: false
        status: Unchecked
      - offset: 2756
        length: 42
        placeholder_text: "# TODO добавьте свойство genre (на чтение)"
        initial_state:
          length: 42
          offset: 2756
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def genre(self):
                  return self.__genre
        selected: false
        status: Unchecked
      - offset: 2804
        length: 179
        placeholder_text: "# TODO  переопределите метод get_info, чтобы он отображал и\
      нформацию специфичную для книги (Книга: 'Название книги',  Автор: 'Кто напис\
      ал', Жанр: 'Жанр книги', Год издания: 'Год')"
        initial_state:
          length: 179
          offset: 2804
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          def get_info(self):
                  return f"Книга: '{self.title}', Автор: {self.author}, Жанр: {self.genre}, Год издания: {self.publication_year}"
        selected: false
        status: Unchecked
      - offset: 3187
        length: 148
        placeholder_text: "... # TODO Инициализируйте переменные от LibraryItem и доба\
      вьте новый приватный атрибут issue_number. Не забудьте, что нужна валидация\
      \ перед записью"
        initial_state:
          length: 148
          offset: 3187
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          super().__init__(title=title, publication_year=publication_year)
                  self.__validate_issue_number(issue_number)
                  self.__issue_number = issue_number
        selected: false
        status: Unchecked
      - offset: 3505
        length: 36
        placeholder_text: "...  # TODO написать метод валидации"
        initial_state:
          length: 36
          offset: 3505
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(issue_number, int):
                      raise TypeError()
        selected: false
        status: Unchecked
      - offset: 3547
        length: 49
        placeholder_text: "# TODO добавьте свойство issue_number (на чтение)"
        initial_state:
          length: 49
          offset: 3547
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def issue_number(self):
                  return self.__issue_number
        selected: false
        status: Unchecked
      - offset: 3602
        length: 166
        placeholder_text: "# TODO  переопределите метод get_info, чтобы он отображал и\
      нформацию специфичную для журнала (Журнал: 'Название журнала',  Номер выпуск\
      а: 'Номер', Год издания: 'Год')"
        initial_state:
          length: 166
          offset: 3602
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          def get_info(self):
                  return f"Журнал: '{self.title}', Номер выпуска: {self.issue_number}, Год издания: {self.publication_year}"
        selected: false
        status: Unchecked
      - offset: 3842
        length: 152
        placeholder_text: "... # TODO Инициализируйте переменные от LibraryItem и доба\
      вьте новый приватный атрибут publication_date. Не забудьте, что нужна валида\
      ция перед записью"
        initial_state:
          length: 152
          offset: 3842
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          def __init__(self, title, publication_year, publication_date):
                  super().__init__(title=title, publication_year=publication_year)
                  self.__validate_publication_date(publication_date)
                  self.__publication_date = publication_date
        selected: false
        status: Unchecked
      - offset: 4464
        length: 36
        placeholder_text: "...  # TODO написать метод валидации"
        initial_state:
          length: 36
          offset: 4464
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not isinstance(publication_date, str):
                      raise TypeError()
                  if not len(date := publication_date.split('.')) == 3:
                      raise ValueError()
                  datetime.date(day=int(date[0]), month=int(date[1]), year=int(date[2]))
        selected: false
        status: Unchecked
      - offset: 4506
        length: 53
        placeholder_text: "# TODO добавьте свойство publication_date (на чтение)"
        initial_state:
          length: 53
          offset: 4506
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @property
              def publication_date(self):
                  return self.__publication_date
        selected: false
        status: Unchecked
      - offset: 4565
        length: 162
        placeholder_text: "# TODO  переопределите метод get_info, чтобы он отображал и\
      нформацию специфичную для газеты (Газета: 'Название газеты',  Дата выпуска:\
      \ 'Дата', Год издания: 'Год')"
        initial_state:
          length: 162
          offset: 4565
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          def get_info(self):
                  return f"Газета: '{self.title}', Дата выпуска: {self.publication_date}, Год издания: {self.publication_year}"
        selected: false
        status: Unchecked
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/output.txt
    visible: false
    learner_created: false
  - name: tests/input.txt
    visible: false
    learner_created: false
  - name: library_items.json
    visible: true
    learner_created: false
status: Unchecked
record: -1
